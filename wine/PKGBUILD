# Maintainer: Kevin Gavrois <kevin@gavrois.fr>

_pkgname=wine
pkgname=$_pkgname-cactus
pkgver=7.0.1b.r0.gf6f06ed2ef6
pkgrel=1
pkgdesc='A compatibility layer for running Windows programs (Valve version)'
arch=('x86_64')
url='https://github.com/ValveSoftware/wine.git'
license=('LGPL')
depends=(
	'sdl2' 'lib32-sdl2'
	'fontconfig' 'lib32-fontconfig'
	'lcms2' 'lib32-lcms2'
	'libxml2' 'lib32-libxml2'
	'libxslt' 'lib32-libxslt'
	'libxcursor' 'lib32-libxcursor'
	'libxrandr' 'lib32-libxrandr'
	'libxdamage' 'lib32-libxdamage'
	'libxi' 'lib32-libxi'
	'freetype2' 'lib32-freetype2'
	'libsm' 'lib32-libsm'
	'gcc-libs' 'lib32-gcc-libs'
	'faudio' 'lib32-faudio'
	'vkd3d' 'lib32-vkd3d'
)
makedepends=(
	'autoconf' 'bison' 'flex' 'pkgconf' 'gcc>=4.5.0-2' 'patch'
	'libpng' 'lib32-libpng'
	'libjpeg-turbo' 'lib32-libjpeg-turbo'
	'libtiff' 'lib32-libtiff'
	'gnutls' 'lib32-gnutls'
	'libxinerama' 'lib32-libxinerama'
	'libxcomposite' 'lib32-libxcomposite'
	'libxmu' 'lib32-libxmu'
	'libxxf86vm' 'lib32-libxxf86vm'
	'libldap' 'lib32-libldap'
	'libusb' 'lib32-libusb'
	'mpg123' 'lib32-mpg123'
	'openal' 'lib32-openal'
	'libpulse' 'lib32-libpulse'
	'alsa-lib' 'lib32-alsa-lib'
	'libxcomposite' 'lib32-libxcomposite'
	'libunwind' 'lib32-libunwind'
	'mesa' 'lib32-mesa'
	'libxslt' 'lib32-libxslt'
	'gstreamer' 'lib32-gstreamer'
	'gst-plugins-base-libs' 'lib32-gst-plugins-base-libs'
	'vulkan-headers'
	'vulkan-icd-loader' 'lib32-vulkan-icd-loader'

	${depends[@]}
)
optdepends=(
	'libpng: Image format decoding.' 'lib32-libpng: Image format decoding.'
	'libjpeg-turbo: Image format decoding.' 'lib32-libjpeg-turbo: Image format decoding.'
	'libtiff: Image format decoding.' 'lib32-libtiff: Image format decoding.'
	'libldap: LDAP remote directory protocol.' 'lib32-libldap: LDAP remote directory protocol.'
	'libusb: USB device support.' 'lib32-libusb: USB device support.'
	'gnutls: Cryptography.' 'lib32-gnutls: Cryptography.'
	'mpg123: mp3 decoding.' 'lib32-mpg123: mp3 decoding.'
	'openal: Audio engine.' 'lib32-openal: Audio engine.'
	'libpulse: Sound backend.' 'lib32-libpulse: Sound backend.'
	'alsa-lib: Sound backend.' 'lib32-alsa-lib: Sound backend.'
	'libxslt: XML parsing.' 'lib32-libxslt: XML parsing.'
	'gstreamer: Multimedia playback.' 'lib32-gstreamer: Multimedia playback.'
	'gst-plugins-base-libs: Multimedia playback.' 'lib32-gst-plugins-base-libs: Multimedia playback.'
	'vulkan-icd-loader: Hardware-accelerated/3D graphics.' 'lib32-vulkan-icd-loader: Hardware-accelerated/3D graphics.'

	'libxcomposite: Window management.' 'lib32-libxcomposite: Window management.'
	'libxinerama: Window management.' 'lib32-libxinerama: Window management.'

	'openvr: VR'
	'openxr: VR'
)

options=('staticlibs')
install="$pkgname.install"
_branch="proton_7.0"
source=(
	"$_pkgname::git+https://github.com/ValveSoftware/wine.git"
	'30-win32-aliases.conf'
	'wine-binfmt.conf'
	'futex.patch')
sha256sums=(
	'SKIP'
	'9901a5ee619f24662b241672a7358364617227937d5f6d3126f70528ee5111e7'
	'6dfdefec305024ca11f35ad7536565f5551f09119dda2028f194aee8f77077a4'
	'0ff0061930783e731221498383e7c4188198a92a54431c9ab754f7ff5bd48ace')

provides=("wine=${pkgver}")
conflicts=('wine')

pkgver() {
       cd $_pkgname
       git describe --long --tags | sed 's/^proton.wine.//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
	cd $_pkgname
	
	git checkout $_branch

	# workaround for FS#55128
	# https://bugs.archlinux.org/task/55128
	# https://bugs.winehq.org/show_bug.cgi?id=43530
	export CFLAGS="${CFLAGS/-fno-plt/}"
	export LDFLAGS="${LDFLAGS/,-z,now/}"

	# Fix openldap 2.5+ detection
	#sed 's/-lldap_r/-lldap/' -i configure

	# Dirty hack (temporary)
	find ./ -type f -exec sed -i 's/ldap_connect(/ldap_connect_wine(/g' {} +

	# https://github.com/ValveSoftware/wine/issues/120#issuecomment-901958052
	./dlls/winevulkan/make_vulkan
	autoreconf -f
	./tools/make_requests
	
	patch -p1 < ../futex.patch

	# delete old build dirs (from previous builds) and make new ones
	rm -rf $srcdir/build64
	rm -rf $srcdir/build32
}

build() {
	# build wine 64-bit
	echo	'Building Wine-64...'
	mkdir	$srcdir/build64
	cd	$srcdir/build64
	../$_pkgname/configure \
		--prefix=/usr \
		--libdir=/usr/lib \
		--with-x \
		--with-gstreamer \
		--without-cups \
		--without-gphoto \
		--without-krb5 \
		--without-mingw \
		--without-netapi \
		--without-opencl \
		--without-pcap \
		--without-sane \
		--without-v4l2 \
		--enable-win64 \
		--disable-win16 \
		--disable-tests
	make -j

	echo	'Building Wine-32...'
	mkdir	$srcdir/build32
	cd	$srcdir/build32
	../$_pkgname/configure \
		--prefix=/usr \
		--libdir=/usr/lib32 \
		--with-x \
		--with-gstreamer \
		--without-cups \
		--without-gphoto \
		--without-krb5 \
		--without-mingw \
		--without-netapi \
		--without-opencl \
		--without-pcap \
		--without-sane \
		--without-v4l2 \
		--disable-win16 \
		--disable-tests \
		--with-wine64=${srcdir}/build64
	make -j
}

package() {
	# package wine 32-bit
	echo	'Packaging Wine-32...'
	cd	$srcdir/build32
	make	prefix=$pkgdir/usr \
		libdir=$pkgdir/usr/lib32 \
		dlldir=$pkgdir/usr/lib32/wine install

	# package wine 64-bit
	echo	'Packaging Wine-64...'
	cd	$srcdir/build64
	make	prefix=$pkgdir/usr \
		libdir=$pkgdir/usr/lib \
		dlldir=$pkgdir/usr/lib/wine install

	# font aliasing settings for Win32 applications
	install -d ${pkgdir}/etc/fonts/conf.{avail,d}
	install -m644 ${srcdir}/30-win32-aliases.conf ${pkgdir}/etc/fonts/conf.avail
	ln -s ../conf.avail/30-win32-aliases.conf     ${pkgdir}/etc/fonts/conf.d/30-win32-aliases.conf

	# wine binfmt
	install -Dm644 ${srcdir}/wine-binfmt.conf   ${pkgdir}/usr/lib/binfmt.d/wine.conf
}
